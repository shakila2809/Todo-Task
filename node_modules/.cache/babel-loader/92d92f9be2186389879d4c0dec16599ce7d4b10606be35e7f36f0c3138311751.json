{"ast":null,"code":"var _jsxFileName = \"/Users/shakilase/Documents/shakila files/Todo-Task/src/Components/UserContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, createContext, useContext, useEffect } from 'react';\n\n// Define the type for the context value\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Create the UserContext\nconst UserContext = /*#__PURE__*/createContext(undefined);\n\n// UserProvider component that wraps your application and provides the context\nexport const UserProvider = ({\n  children\n}) => {\n  _s();\n  const [username, setUsername] = useState(null);\n  useEffect(() => {\n    if (username) {\n      localStorage.setItem('username', username);\n    } else {\n      // localStorage.removeItem('username'); // Optionally remove username from localStorage on logout\n    }\n  }, [username]);\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      username,\n      setUsername\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n\n// Custom hook to use the UserContext\n_s(UserProvider, \"Tll88kuSsLVx4FtakfCyQkhtKNU=\");\n_c = UserProvider;\nexport const useUser = () => {\n  _s2();\n  const context = useContext(UserContext);\n  if (!context) {\n    throw new Error('useUser must be used within a UserProvider');\n  }\n  return context;\n};\n_s2(useUser, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["React","useState","createContext","useContext","useEffect","jsxDEV","_jsxDEV","UserContext","undefined","UserProvider","children","_s","username","setUsername","localStorage","setItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useUser","_s2","context","Error","$RefreshReg$"],"sources":["/Users/shakilase/Documents/shakila files/Todo-Task/src/Components/UserContext.tsx"],"sourcesContent":["import React, { useState, createContext, useContext, ReactNode,useEffect } from 'react';\n\n// Define the type for the context value\ninterface UserContextType {\n    username: string | null;\n    setUsername: React.Dispatch<React.SetStateAction<string | null>>;\n}\n\n// Create the UserContext\nconst UserContext = createContext<UserContextType | undefined>(undefined);\n\n// UserProvider component that wraps your application and provides the context\nexport const UserProvider = ({ children }: { children: ReactNode }) => {\n    const [username, setUsername] = useState<string | null>(null);\n\n    useEffect(() => {\n        if (username) {\n            localStorage.setItem('username', username);\n        } else {\n            // localStorage.removeItem('username'); // Optionally remove username from localStorage on logout\n        }\n    }, [username]);\n\n    return (\n        <UserContext.Provider value={{ username, setUsername }}>\n            {children}\n        </UserContext.Provider>\n    );\n};\n\n// Custom hook to use the UserContext\nexport const useUser = () => {\n    const context = useContext(UserContext);\n    if (!context) {\n        throw new Error('useUser must be used within a UserProvider');\n    }\n    return context;\n};\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,aAAa,EAAEC,UAAU,EAAYC,SAAS,QAAQ,OAAO;;AAEvF;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAMA;AACA,MAAMC,WAAW,gBAAGL,aAAa,CAA8BM,SAAS,CAAC;;AAEzE;AACA,OAAO,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAkC,CAAC,KAAK;EAAAC,EAAA;EACnE,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAgB,IAAI,CAAC;EAE7DG,SAAS,CAAC,MAAM;IACZ,IAAIQ,QAAQ,EAAE;MACVE,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEH,QAAQ,CAAC;IAC9C,CAAC,MAAM;MACH;IAAA;EAER,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EAEd,oBACIN,OAAA,CAACC,WAAW,CAACS,QAAQ;IAACC,KAAK,EAAE;MAAEL,QAAQ;MAAEC;IAAY,CAAE;IAAAH,QAAA,EAClDA;EAAQ;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;;AAED;AAAAV,EAAA,CAlBaF,YAAY;AAAAa,EAAA,GAAZb,YAAY;AAmBzB,OAAO,MAAMc,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EACzB,MAAMC,OAAO,GAAGtB,UAAU,CAACI,WAAW,CAAC;EACvC,IAAI,CAACkB,OAAO,EAAE;IACV,MAAM,IAAIC,KAAK,CAAC,4CAA4C,CAAC;EACjE;EACA,OAAOD,OAAO;AAClB,CAAC;AAACD,GAAA,CANWD,OAAO;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}