{"ast":null,"code":"var _jsxFileName = \"/Users/shakilase/Documents/shakila files/Todo-Task/src/Components/Login.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, createContext } from 'react';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport './login.css';\nimport { getUserData } from './fetchapi';\nimport { useNavigate } from 'react-router-dom';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css'; // Import the styles\nimport { useUser } from './UserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const {\n    setUsername\n  } = useUser();\n  const navigate = useNavigate();\n  const UserContext = /*#__PURE__*/createContext(undefined);\n  const validationSchema = Yup.object({\n    username: Yup.string().required('Username is required').min(3, 'Username must be at least 3 characters'),\n    password: Yup.string().required('Password is required')\n    //   .min(6, 'Password must be at least 6 characters'),\n  });\n  const formik = useFormik({\n    initialValues: {\n      username: '',\n      password: ''\n    },\n    validationSchema: validationSchema,\n    onSubmit: async values => {\n      console.log('Login form values:', values);\n      const url = 'http://localhost:3000/auth';\n      try {\n        const users = await getUserData(url);\n        console.log(users, \"ddsdsdsd\");\n\n        // const user = users\n        const user = users.find(user => user.username.toLowerCase().trim() === values.username.toLowerCase().trim() && user.password === values.password);\n        //   console.log(user,\"logined\")\n        if (user) {\n          setUsername(user.username);\n          navigate('/todomain');\n          console.log(user, \"logined\");\n        } else {\n          console.log(\"no user found\");\n          toast.error(\"No User Found\");\n        }\n      } catch (error) {\n        console.log(\"Error fetching data:\", error);\n        toast.error(\"Error fetching data\");\n      }\n    }\n  });\n  useEffect(() => {}, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"logincontainer\",\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"containerlogin shadow-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: formik.handleSubmit,\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"formField\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"username\",\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"username\",\n            name: \"username\",\n            type: \"text\",\n            onChange: formik.handleChange,\n            onBlur: formik.handleBlur,\n            value: formik.values.username,\n            className: \"input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this), formik.touched.username && formik.errors.username ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error\",\n            children: formik.errors.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 29\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"formField\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"password\",\n            name: \"password\",\n            type: \"password\",\n            onChange: formik.handleChange,\n            onBlur: formik.handleBlur,\n            value: formik.values.password,\n            className: \"input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this), formik.touched.password && formik.errors.password ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error\",\n            children: formik.errors.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 29\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          disabled: formik.isSubmitting,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"ddbc4VYkd57P1TYFL32YIMKhHWI=\", false, function () {\n  return [useUser, useNavigate, useFormik];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useEffect","createContext","useFormik","Yup","getUserData","useNavigate","ToastContainer","toast","useUser","jsxDEV","_jsxDEV","Login","_s","setUsername","navigate","UserContext","undefined","validationSchema","object","username","string","required","min","password","formik","initialValues","onSubmit","values","console","log","url","users","user","find","toLowerCase","trim","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","handleSubmit","htmlFor","id","name","type","onChange","handleChange","onBlur","handleBlur","value","touched","errors","disabled","isSubmitting","_c","$RefreshReg$"],"sources":["/Users/shakilase/Documents/shakila files/Todo-Task/src/Components/Login.tsx"],"sourcesContent":["import React, { useEffect,useContext,createContext } from 'react'\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport './login.css'\nimport { getUserData, User } from './fetchapi';\nimport { useNavigate } from 'react-router-dom';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css'; // Import the styles\nimport { useUser } from './UserContext'; \n\ninterface UserContextType {\n    username: string | null;\n    setUsername: React.Dispatch<React.SetStateAction<string | null>>;\n}\nconst Login = () => {\n    const { setUsername } = useUser();\n    const navigate = useNavigate();\n    const UserContext = createContext<UserContextType | undefined>(undefined);\n    const validationSchema = Yup.object({\n        username: Yup.string()\n            .required('Username is required')\n            .min(3, 'Username must be at least 3 characters'),\n        password: Yup.string()\n            .required('Password is required')\n        //   .min(6, 'Password must be at least 6 characters'),\n    });\n\n\n    const formik = useFormik({\n        initialValues: {\n            username: '',\n            password: '',\n        },\n        validationSchema: validationSchema,\n            onSubmit: async (values) => {\n                console.log('Login form values:', values);\n                const url = 'http://localhost:3000/auth';\n                try {\n                    const users = await getUserData(url);\n                    console.log(users, \"ddsdsdsd\");\n\n                    // const user = users\n                    const user = users.find((user: User) => \n                        user.username.toLowerCase().trim() === values.username.toLowerCase().trim() && \n                        user.password === values.password\n                      );\n                    //   console.log(user,\"logined\")\n                   if(user){\n                    setUsername(user.username);\n                    navigate('/todomain');\n                    console.log(user,\"logined\")\n                   }else{\n                    console.log(\"no user found\")\n                    toast.error(\"No User Found\");\n                   }\n                } catch (error) {\n                    console.log(\"Error fetching data:\", error);\n                    toast.error(\"Error fetching data\");\n                    \n                }\n            },\n    });\n\n    useEffect(() => {\n\n\n    }, []);\n\n\n    return (\n        <div className='logincontainer'>\n             <ToastContainer />\n            <div className='containerlogin shadow-lg'>\n                <h2>Login</h2>\n                <form onSubmit={formik.handleSubmit} className='form'>\n                    {/* Username Field */}\n                    <div className='formField'>\n                        <label htmlFor=\"username\">Username</label>\n                        <input\n                            id=\"username\"\n                            name=\"username\"\n                            type=\"text\"\n                            onChange={formik.handleChange}\n                            onBlur={formik.handleBlur}\n                            value={formik.values.username}\n                            className='input'\n\n                        />\n                        {formik.touched.username && formik.errors.username ? (\n                            <div className='error'>{formik.errors.username}</div>\n                        ) : null}\n                    </div>\n\n                    {/* Password Field */}\n                    <div className='formField'>\n                        <label htmlFor=\"password\">Password</label>\n                        <input\n                            id=\"password\"\n                            name=\"password\"\n                            type=\"password\"\n                            onChange={formik.handleChange}\n                            onBlur={formik.handleBlur}\n                            value={formik.values.password}\n                            className='input'\n                        />\n                        {formik.touched.password && formik.errors.password ? (\n                            <div className='error'>{formik.errors.password}</div>\n                        ) : null}\n                    </div>\n\n                    {/* Submit Button */}\n                    <button type=\"submit\" className='btn btn-primary' disabled={formik.isSubmitting}>\n                        Login\n                    </button>\n                </form>\n            </div>\n        </div>\n\n    )\n\n\n\n}\n\nexport default Login\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}